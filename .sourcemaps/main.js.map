{"version":3,"sources":["../../src/providers/transactionModel.ts","../../src/config/app.config.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/providers/restapi-service.ts","../../src/providers/authenticate.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/models/qrData.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\nimport { Injectable } from \"@angular/core\";\nimport { Storage } from '@ionic/storage';\nimport { QRData } from \"../models/qrData\";\nimport { NavController } from \"ionic-angular\";\n\n@Injectable()\nexport class TransactionModel {\n\n  generatedQRdata: string;\n  createdCode: any;\n  public scannedCode: QRData = new QRData();\n  password: string;\n  loggedInUser: string;\n  loggedInUserName: string;\n  email: string;\n  mobileNumber: number;\n  transactionDate: string;\n  transactionId: number;\n  amount: any;\n  balance: number = 0;\n  userAddress: string;\n  errorMsg: string;\n  remarks:string;\n  loggedInUserWalletAddress: string;\n  displayBalance: string= \"0.00\";\n  receiverUserId:string;\n  receiverWalletAddress: string;\n  receiverUserName: string;\n  senderUserName:string;\n  transactionType: string;\n  qrCodeCreated: boolean = false;\n  isqrCodeScanned: boolean = false;\n  qrScannedVal:string;\n\n\n\n  constructor(private storage:Storage) {\n  }\n \n  getQRData() {\n    let self = this;\n    let d = new Date();\n    let todayDate=d.getFullYear()+\"-\"+(d.getMonth()+1)+\"-\"+d.getDate();\n    self.transactionId = new Date().getTime();\n    let data = {\n      \"userName\": this.loggedInUserName, \"userAddress\": this.loggedInUserWalletAddress, \"receiverUserId\": this.loggedInUser,\n      \"amount\": this.amount, \"transactionDate\": todayDate, \"transactionId\": self.transactionId\n    };\n    this.generatedQRdata = JSON.stringify(data);\n    return this.generatedQRdata;\n  }\n \n  public delete(key: string) {\n    let self = this;\n    return new Promise((resolve) => {\n      self.storage.remove(key).then(() => {\n        resolve(\"Success\");\n      })\n    });\n  }\n\n\n  resetValues(){\n    this.amount='';\n  }\n} \n\n\n// WEBPACK FOOTER //\n// ./src/providers/transactionModel.ts","export class AppConfig { \n    static GET_USER_DATA_URL = \"https://rak-ewallet-service-terrific-serval.mybluemix.net/api/users/getCustomerData\";\n    static REGISTER_USER_DATA_URL = \"https://rak-ewallet-service-terrific-serval.mybluemix.net/api/users/register\";\n    static GETNEWADDRESS_BC = \"https://rak-ewallet-service-terrific-serval.mybluemix.net/api/users/getBalance\";\n    static TRANSFERAMOUNT=\"https://rak-ewallet-service-terrific-serval.mybluemix.net/api/users/transferWalletToWallet\";\n    static VALIDATE_TRANSACTION=\"https://rak-ewallet-service-terrific-serval.mybluemix.net/api/users/checkTransaction\";\n    //rak-ewallet-service-terrific-serval.mybluemix.net\n    //static GET_USER_DATA_URL = \"http://localhost:8080/e-wallet-service/api/users/getCustomerData\";\n    //static REGISTER_USER_DATA_URL = \"http://localhost:8080/e-wallet-service/api/users/register\";\n    //static GETNEWADDRESS_BC = \"http://localhost:8080/e-wallet-service/api/users/getBalance\";\n    //static TRANSFERAMOUNT=\"http://localhost:8080/e-wallet-service/api/users/transferWalletToWallet\";\n\n    //static GET_USER_DATA_URL = \"http://169.254.9.231:8080/e-wallet-service/api/users/getCustomerData\";\n    //static REGISTER_USER_DATA_URL = \"http://169.254.9.231:8080/e-wallet-service/api/users/register\";\n    //static GETNEWADDRESS_BC = \"http://169.254.9.231:8080/e-wallet-service/api/users/getBalance\";\n    //static TRANSFERAMOUNT=\"http://169.254.9.231:8080/e-wallet-service/api/users/transferWalletToWallet\";\n    //static VALIDATE_TRANSACTION=\"http://169.254.9.231:8080/e-wallet-service/api/users/checkTransaction\";\n    \n}   \n\n\n// WEBPACK FOOTER //\n// ./src/config/app.config.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 113;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 113\n// module chunks = 7","var map = {\n\t\"../pages/deposit/deposit.module\": [\n\t\t279,\n\t\t6\n\t],\n\t\"../pages/home/home.module\": [\n\t\t280,\n\t\t5\n\t],\n\t\"../pages/login/login.module\": [\n\t\t281,\n\t\t1\n\t],\n\t\"../pages/pay/pay.module\": [\n\t\t282,\n\t\t4\n\t],\n\t\"../pages/receive/receive.module\": [\n\t\t283,\n\t\t0\n\t],\n\t\"../pages/register/register.module\": [\n\t\t284,\n\t\t3\n\t],\n\t\"../pages/withdraw/withdraw.module\": [\n\t\t285,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 154;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 154\n// module chunks = 7","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Events } from 'ionic-angular';\nimport { Platform } from 'ionic-angular/platform/platform';\nimport { TransactionModel } from './transactionModel';\nimport { AppConfig } from '../config/app.config';\n\n\n@Injectable()\nexport class RestAPIServiceProvider {\n\n  constructor(public http: Http, private events: Events, private platform: Platform, public userData: TransactionModel) {\n    // console.log('ApiConnectorServiceProvider Provider');\n  }\n\n\n  public makeBackendPostRequest(url: string, accessToken: string, message: string): Promise<any> {\n    let self = this;\n    return new Promise(\n      (resolve, reject) => {\n\n        let headers = new Headers();\n        headers.append(\"content-type\", \"application/json\");\n        if (accessToken) {\n          //headers.append(\"Authorization\", \"Basic \" + accessToken);\n\n          headers.append(\"accept\", \"application/json\");\n          headers.append(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\n          headers.append(\"Access-Control-Allow-Origin\", \"*\");\n          headers.append(\"Access-Control-Allow-Headers\", \"X-Requested-With, Content-Type, Authorization, Origin, Accept\");\n        }\n        let options = new RequestOptions({ headers: headers });\n        console.log(\"headers obj  : \" + JSON.stringify(headers));\n        console.log(\"URL for token generation : \" + url);\n        console.log(\"Message from client :: \" + JSON.stringify(message));\n\n        self.http.post(url, JSON.parse(message), options).subscribe((response: any) => {\n          //console.log(\"resopnse : \" + JSON.stringify(response));\n          resolve(response);\n          //console.log(response.status);\n          console.log(response._body); // data received by server\n        }, error => {\n          console.log(error.status);\n          console.log(error.error); // error message as string\n          console.log(error.headers);\n        }); //end of POST promise.\n        //});//end of gethttp promise\n        //}) //end of createAPIRequest promise.        \n      });\n  }\n\n  public getBalance(): Promise<string> {\n    //  console.log(\"regenerateAccessToken : \" + refreshToken);\n    let self = this;\n    return new Promise((resolve, reject) => {\n\n      console.log(\"Getting balance for user::\" + self.userData.loggedInUserName + \" with wallet id --\" + self.userData.loggedInUserWalletAddress\n      );\n      let requestObj = {\n        \"walletAddress\": this.userData.loggedInUserWalletAddress\n      }\n\n      //console.log(\"regenerateAccessToken : \" + JSON.stringify(requestObj));\n      self.makeBackendPostRequest(AppConfig.GETNEWADDRESS_BC, null, JSON.stringify(requestObj)).then(response => {\n        console.log(\"Response after user registartion :: \" + JSON.stringify(response));\n        resolve(response);\n        let info = JSON.parse(response._body);\n        if (info.data != null) {\n          this.userData.balance = info.data.walletBalance;\n          this.userData.displayBalance = parseFloat(this.userData.balance.toString()).toFixed(2);\n        }\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  updateBalance() {\n    let self = this;\n    self.getBalance().then(result => {\n      console.log(\"Balance Updates---::\");\n    });\n  }\n\n  \n} \n\n\n// WEBPACK FOOTER //\n// ./src/providers/restapi-service.ts","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthenticateProvider {\n    constructor(public http: Http) {\n        console.log('Hello AuthenticateProvider Provider');\n    }\n\n    /**\n     * Store user on local storage.\n     * \n     * @param user User.\n     */\n    private setAuthenticatedUser(user: any) {\n        if (user != null) {\n            localStorage.setItem('app.userInfo', 'true');\n            localStorage.setItem('app.userInfo.id', user.id);\n            localStorage.setItem('app.userInfo.name', user.name);\n        }\n    }\n\n    /**\n     * Get user from local storage.\n     * \n     * @return User.\n     */\n    public getAuthenticatedUser(): any {\n        let user: any;\n        if (localStorage.getItem('app.userInfo')) {\n            user = {\n            id : localStorage.getItem('app.userInfo.id'),\n            name : localStorage.getItem('app.userInfo.name')\n            }\n        }\n        return user;\n    }\n\n    /**\n     * Remove user from local storage.\n     */\n    public clearAuthenticatedUser(): void {\n        localStorage.removeItem('app.userInfo');\n        localStorage.removeItem('app.userInfo.id');\n        localStorage.removeItem('app.userInfo.name');\n    }\n\n    /**\n     * Perform authentication using credentials.\n     * \n     * @param user Username.\n     * @param password Password.\n     */\n    public authenticateUsingCredentials(user: string, password: string) {\n        if (user === null || password === null) {\n            // Throws error message.\n            return Observable.throw('User and password are required.');\n        } else {\n            // Creates Observable.\n            return Observable.create(observer => {\n                // Perform server request to validate user credentials.\n                this.setAuthenticatedUser({id: '1', name: 'FortDev'});\n                observer.next();\n                observer.complete();\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/authenticate.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule,NavController, NavParams } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { EWallet } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\nimport { AuthenticateProvider } from '../providers/authenticate';\nimport { HttpModule } from '@angular/http';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { PayPage } from '../pages/pay/pay';\nimport { QRData } from '../models/qrData';\nimport { RestAPIServiceProvider } from '../providers/restapi-service';\nimport { TransactionModel } from '../providers/transactionModel';\nimport { AppConfig } from '../config/app.config';\nimport { IonicStorageModule } from '@ionic/storage';\n \n     \n@NgModule({\n  declarations: [\n    EWallet\n  ],\n  imports: [ \n    BrowserModule,\n    HttpModule,\n      IonicModule.forRoot(EWallet, {\n      preloadModules: true,\n      scrollAssist: false, autoFocusAssist: false\n    }),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    EWallet\n  ],   \n  providers: [\n    StatusBar,\n    SplashScreen,\n    AuthenticateProvider,\n    BarcodeScanner,\n    TransactionModel,\n    RestAPIServiceProvider,\n    AppConfig,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})        \nexport class AppModule {} \n      \n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\nexport class QRData {\n\n    public receiverUserName: string;\n    public receiverAmount: number;\n    public receiverWalletAddress: string;\n    public receiverUserId:string;\n\n\n    getScannedDetails() {\n\n\n    }\n    constructor() { }\n\n    // toJSON is automatically used by JSON.stringify\n    toJSON(): QRData {\n        // console.log(\"Id----\"+this.userName+\"====\"+this.amount);\n        // copy all fields from `this` to an empty object and return in\n        return Object.assign({}, this)//, {\n        // convert fields that need converting\n        //   transactionDate: this.transactionDate.toLocaleString()\n        // });\n    }\n\n    // fromJSON is used to convert an serialized version\n    // of the QRData to an instance of the class\n    static fromJSON(json: QRData | string): QRData {\n        /* if (typeof json === 'string') {\n             console.log(\"inside string\");\n             // if it's a string, parse it first\n             return JSON.parse(json)//, QRData.reviver);\n         } else {*/\n        console.log(\"inside else\");\n        // create an instance of the QRData class\n        let qrData = Object.setPrototypeOf(json, QRData.prototype);\n        /* copy all the fields from the json object\n        return Object.assign(qrData, json);/*, {\n            // convert fields that need converting\n            transactionDate: new Date(json.transactionDate),\n        });\n        */\n        return qrData;\n\n    }\n\n\n    // reviver can be passed as the second parameter to JSON.parse\n    // to automatically call QRData.fromJSON on the resulting value.\n    static reviver(key: string, value: any): any {\n        return key === \"\" ? QRData.fromJSON(value) : value;\n    }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/qrData.ts","import { Component } from '@angular/core';\nimport { Platform, Events, MenuController, NavController } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { LoginPage } from '../pages/login/login';\nimport { PayPage } from '../pages/pay/pay';\nimport { ReceivePage } from '../pages/receive/receive';\nimport { WithdrawPage } from '../pages/withdraw/withdraw';\nimport { UserData } from '../providers/user-data';\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class EWallet {\n  rootPage: String = 'LoginPage';\n\n  // List of pages that can be navigated to from the left menu\n  // the left menu only works after login\n  // the login page disables the left menu\n\n\n  constructor(\n    public events: Events,\n    public menu: MenuController,\n    public platform: Platform,\n    public splashScreen: SplashScreen,\n    public statusBar: StatusBar,\n  ) {\n    let self = this;\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n\n    // load the conference data\n    // confData.load();\n\n    // decide which menu items should be hidden by current login status stored in local storage\n    // this.userData.hasLoggedIn().then((hasLoggedIn) => {\n    // this.enableMenu(hasLoggedIn === true);\n    //});\n    //this.enableMenu(true);\n\n    //this.listenToLoginEvents();\n  }\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}