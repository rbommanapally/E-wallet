{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACN;AAU1C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAR9B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAY;aACb;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,+DAAY,CAAC;aACvC;SACF,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZW;AACkC;AACR;AACK;AACrB;AACX;AAEzC;;;;;GAKG;AAOH;IAGE,sBAAmB,OAAsB,EAAS,SAAoB,EAAS,QAA0B,EAChG,cAAsC,EAAU,WAA8B,EAAU,OAAgB;QAD9F,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAkB;QAChG,mBAAc,GAAd,cAAc,CAAwB;QAAU,gBAAW,GAAX,WAAW,CAAmB;QAAU,YAAO,GAAP,OAAO,CAAS;QAC/G,IAAI,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,+BAAQ,GAAR;QAAA,iBA+BC;QA9BC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACnC,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QACH,4DAA4D;QAC5D,IAAI,eAAe,GAAG;YACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;YACpC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,eAAe,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG;YAC5F,SAAS,EAAE,aAAa,EAAE,iBAAiB,EAAE,EAAE,EAAE,kBAAkB,EAAE,EAAE;SACxE,CAAC;QAEF,MAAM,CAAC,OAAO,EAAE,CAAC;QACjB,kEAAkE;QAClE,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,qEAAS,CAAC,sBAAsB,EAAE,IAAI,EAC/E,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAC3C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACtC,+DAA+D;YAC/D,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,IAAE,IAAI,IAAG,MAAM,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1D,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9C,KAAI,CAAC,QAAQ,CAAC,yBAAyB,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;gBACpE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,MAAM,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,OAAO,EAAE,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC;YAC/C,CAAC;QAEH,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACZ,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAEnC,CAAC;IA5CU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;WACG;SAC7B,CAAC;gLAI4B,CAAa,gEAAoB,EAA4C;YAChF,SAAwF;OAJtG,YAAY,CA6CxB;IAAD,CAAC;AAAA;SA7CY,YAAY,e","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n  ],\n})\nexport class RegisterPageModule {}\n \n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { TransactionModel } from '../../providers/transactionModel';\nimport { RestAPIServiceProvider } from '../../providers/restapi-service';\nimport { AppConfig } from '../../config/app.config';\nimport { Storage } from '@ionic/storage';\n\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n  isRegistered:boolean;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public userData: TransactionModel,\n    public restApiService: RestAPIServiceProvider, private loadingCtrl: LoadingController, private storage: Storage) {\n    let self = this;\n  }\n\n  Register() {\n    let self = this;\n    let loader = this.loadingCtrl.create({\n      content: \"Please wait...\"\n    });\n    // prepare the json for the user to register in the local DB\n    let registerJsonMsg = {\n      \"userId\": self.userData.loggedInUser,\n      \"userName\": self.userData.loggedInUserName, \"requestStatus\": \"Registered\", \"activeFlag\": \"Y\",\n      \"remarks\": \"Regisetered\", \"createdDateTime\": \"\", \"modifiedDateTime\": \"\"\n    };\n\n    loader.present();\n    // if user is not registered, register the user in the block chain\n    this.restApiService.makeBackendPostRequest(AppConfig.REGISTER_USER_DATA_URL, null,\n      JSON.stringify(registerJsonMsg)).then((result) => {\n        let bcData = JSON.parse(result._body);\n        // assign the block chain user unique address to logged in user\n        if (bcData.data!=null&& bcData.data.walletAddress != null) {\n          console.log(\"wallet address::\" + bcData.data);\n          this.userData.loggedInUserWalletAddress = bcData.data.walletAddress;\n          this.isRegistered = true;\n          loader.dismiss();\n        } else {\n          loader.dismiss();\n          console.log(\"block chain reuslt--\" + bcData);\n        }\n\n      }).catch(error => {\n        console.log(\"error : \" + JSON.stringify(error));\n      });\n  }\n\n  redirectToHome() {\n    this.navCtrl.setRoot('HomePage');\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}