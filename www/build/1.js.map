{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/home/home.ts","../../src/pages/register/register.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule {}\n \n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { NavController, IonicPage, AlertController } from 'ionic-angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { PayPage } from '../pay/pay';\nimport { QRData } from '../../models/qrData';\nimport { plainToClass } from \"class-transformer\";\nimport { TransactionModel } from '../../providers/transactionModel';\nimport { RestAPIServiceProvider } from '../../providers/restapi-service';\n\n@IonicPage()\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n\n  constructor(public navCtrl: NavController, public barcodeScanner: BarcodeScanner,\n    public userData: TransactionModel, public restAptService: RestAPIServiceProvider,\n    private alertCtrl: AlertController) {\n    let self = this;\n    if (self.userData.balance == null) {\n      self.userData.balance = 0.00;\n    }\n  }\n\n  receive() {\n    this.userData.qrCodeCreated = false;\n    this.navCtrl.push('ReceivePage');\n  }\n\n  scanCode() {\n    let self = this;\n\n    //  let qrData:QRData;\n    this.barcodeScanner.scan().then(barcodeData => {\n      let scannedData = JSON.parse(barcodeData.text);\n\n      console.log(\"Receiver amont---\" + scannedData.amount);\n      console.log(\"Receiver date---\" + scannedData.transactionDate);\n      console.log(\"Receiver id---\" + scannedData.transactionId);\n      console.log(\"Receiver name---\" + scannedData.userName);\n      console.log(\"Receiver wallet--\" + scannedData.userAddress);\n      this.userData.amount = parseFloat(scannedData.amount.toString()).toFixed(2);\n      this.userData.transactionDate = scannedData.transactionDate;\n      this.userData.receiverWalletAddress = scannedData.userAddress;\n      this.userData.receiverUserName = scannedData.userName;\n      this.userData.transactionId = scannedData.transactionId;\n      this.userData.receiverUserId = scannedData.receiverUserId;\n      this.navCtrl.push('PayPage');\n    }, (err) => {\n      console.log('Error: ', err);\n    });\n  }\n\n  deposit() {\n    this.navCtrl.push('DepositPage');\n  }\n\n  withdraw() {\n    let self = this;\n    this.navCtrl.push('WithdrawPage');\n  }\n\n  logout() {\n    this.navCtrl.push('LoginPage');\n  }\n  redirectToHome() {\n    this.navCtrl.setRoot('HomePage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { TransactionModel } from '../../providers/transactionModel';\nimport { RestAPIServiceProvider } from '../../providers/restapi-service';\nimport { AppConfig } from '../../config/app.config';\nimport { Storage } from '@ionic/storage';\n\n/**\n * Generated class for the RegisterPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage {\n  isRegistered:boolean;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public userData: TransactionModel,\n    public restApiService: RestAPIServiceProvider, private loadingCtrl: LoadingController, private storage: Storage) {\n    let self = this;\n  }\n\n  Register() {\n    let self = this;\n    let loader = this.loadingCtrl.create({\n      content: \"Please wait...\"\n    });\n    // prepare the json for the user to register in the local DB\n    let registerJsonMsg = {\n      \"userId\": self.userData.loggedInUser,\n      \"userName\": self.userData.loggedInUserName, \"requestStatus\": \"Registered\", \"activeFlag\": \"Y\",\n      \"remarks\": \"Regisetered\", \"createdDateTime\": \"\", \"modifiedDateTime\": \"\"\n    };\n\n    loader.present();\n    // if user is not registered, register the user in the block chain\n    this.restApiService.makeBackendPostRequest(AppConfig.REGISTER_USER_DATA_URL, null,\n      JSON.stringify(registerJsonMsg)).then((result) => {\n        let bcData = JSON.parse(result._body);\n        // assign the block chain user unique address to logged in user\n        if (bcData.data!=null&& bcData.data.walletAddress != null) {\n          console.log(\"wallet address::\" + bcData.data);\n          this.userData.loggedInUserWalletAddress = bcData.data.walletAddress;\n          this.isRegistered = true;\n          loader.dismiss();\n        } else {\n          loader.dismiss();\n          console.log(\"block chain reuslt--\" + bcData);\n        }\n\n      }).catch(error => {\n        console.log(\"error : \" + JSON.stringify(error));\n      });\n  }\n\n  redirectToHome() {\n    this.navCtrl.setRoot('HomePage');\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { HomePage } from '../home/home';\nimport { AuthenticateProvider } from '../../providers/authenticate';\nimport { TransactionModel } from '../../providers/transactionModel';\nimport { AppConfig } from '../../config/app.config';\nimport { RestAPIServiceProvider } from '../../providers/restapi-service';\nimport { Http, Headers, RequestOptions, HttpModule } from '@angular/http';\nimport { RegisterPage } from '../register/register';\n\n\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  public user: any = {};\n\n  constructor(\n    private navCtrl: NavController,\n    private navParams: NavParams,\n    private authenticateProvider: AuthenticateProvider,\n    private userData: TransactionModel,\n    private restApiService: RestAPIServiceProvider,\n    private http: Http,\n    private loadingCtrl: LoadingController\n  ) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n\n\n  public login() {\n    let self = this;\n    let message = { \"userId\": self.userData.loggedInUser };\n\n    let loader = this.loadingCtrl.create({\n      content: \"Please wait...\"\n    });\n    loader.present();\n    // check the login using ldap and throw error if not present in ldap\n    // check if the user is null\n    // if null the\n    // if ldap user is present then check the user in database\n    this.restApiService.makeBackendPostRequest(AppConfig.GET_USER_DATA_URL, null, JSON.stringify(message)).then((result) => {\n      let info = JSON.parse(result._body);\n      console.log(\"after getting user --\" + info.data);\n      //check if the user exists\n      // if present in database then get the balance and show home page\n      if (info.data != null && info.data.walletAddress != \"\") {\n        this.userData.loggedInUserName = info.data.userName;\n        if (info.data.walletBalance != null) {\n          this.userData.balance = info.data.walletBalance;\n          this.userData.displayBalance = parseFloat(this.userData.balance.toString()).toFixed(2);\n        }\n        this.userData.loggedInUserWalletAddress = info.data.walletAddress;\n        loader.dismiss();\n        this.navCtrl.setRoot(HomePage);\n      } else {\n        loader.dismiss();\n        // if the user is not present in database   then redirect him to wallet registration page\n        this.navCtrl.push(RegisterPage);\n      }\n    }).catch(error => {\n      loader.dismiss();\n      console.log(\"error : \" + JSON.stringify(error));\n    });\n\n\n\n    //if (self.user.userName && self.user.password) {\n    //  //Replace this with the actual name of the user from ldap\n    //this.userData.loggedInUser = self.user.userName;\n    //this.userData.password = self.user.password;\n    //this.authenticateProvider.authenticateUsingCredentials(self.user.userName, self.user.password)\n    // .subscribe(() => {\n    //  this.navCtrl.setRoot(HomePage);\n    //});\n    // }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}